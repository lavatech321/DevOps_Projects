---
- hosts: localhost
  tasks:
    - name: Compress directory /path/to/foo/ into /path/to/foo.tgz
      archive:
        path: /path/to/foo
        dest: /path/to/foo.tgz

    - name: Compress regular file /path/to/foo into /path/to/foo.gz and remove it
      archive:
        path: /path/to/foo
        remove: yes

    - name: Create a zip archive of /path/to/foo
      archive:
        path: /path/to/foo
        format: zip

    - name: Create a bz2 archive of multiple files, rooted at /path
      archive:
        path:
          - /path/to/foo
          - /path/wong/foo
        dest: /path/file.tar.bz2
        format: bz2

    - name: Create a bz2 archive of a globbed path, while excluding specific dirnames
      archive:
        path:
          - /path/to/foo/*
        dest: /path/file.tar.bz2
        exclude_path:
          - /path/to/foo/bar
          - /path/to/foo/baz
        format: bz2

    - name: Create a bz2 archive of a globbed path, while excluding a glob of dirnames
      archive:
        path:
          - /path/to/foo/*
        dest: /path/file.tar.bz2
        exclude_path:
          - /path/to/foo/ba*
        format: bz2

    - name: Use gzip to compress a single archive (i.e don't archive it first with tar)
      archive:
        path: /path/to/foo/single.file
        dest: /path/file.gz
        format: gz

    - name: Create a tar.gz archive of a single file.
      archive:
        path: /path/to/foo/single.file
        dest: /path/file.tar.gz
        format: gz
        force_archive: true

    - name: Uncompress a tar file present on ansible master node and copy it on slave node
      unarchive:
        src: foo.tgz
        dest: /var/lib/foo

    - name: Unarchive a file that needs to be downloaded (added in 2.0)
      unarchive:
        src: https://example.com/example.zip
        dest: /usr/local/bin
        remote_src: yes

...
