---
- hosts: masters
  gather_facts: false
  become: true
  vars:
    mysql_root_password: 'redhat'
    packages:
      - mysql-server
      - mysql-devel
      - python39
      - python39-devel
      - python39-pip
      - gcc
      - python3-firewall
    ansible_python_interpreter: /usr/bin/python3.6

  tasks:
    - block:
        - name: Package installation
          dnf:
            name: "{{ item }}"
            state: present
          loop: 
            - "{{ packages }}"

        - name: Install Required pip modules
          pip:
            name: PyMySQL
            state: present
            executable: pip3

        - name: Restart service
          service:
            name: mysqld
            state: started
            enabled: yes

        - name: Ensure root user can only login from localhost
          mysql_user:
            login_password: "{{ mysql_root_password }}"
            check_implicit_admin: yes
            name: root
            host: "{{ item }}"
            password: "{{ mysql_root_password }}"
            state: present
          with_items:
            - localhost
            - 127.0.0.1
          args:
            creates: /tmp/mysql_configure.txt


        - name: Add .my.cnf to user home
          template:
            src: my.cnf.j2
            dest: /root/.my.cnf

        - name: Reload privilege tables
          command: |
            mysql -p{{ mysql_root_password }} -ne "{{ item }}"
          with_items:
            - FLUSH PRIVILEGES
          changed_when: False

        - name: Remove anonymous users
          command: |
            mysql -p{{ mysql_root_password }} -ne "{{ item }}"
          with_items:
            - DELETE FROM mysql.user WHERE User=''
          changed_when: False

        - name: Disallow root login remotely
          command: |
            mysql -p{{ mysql_root_password }} -ne "{{ item }}"
          with_items:
            - DELETE FROM mysql.user WHERE User='root' AND Host NOT IN ('localhost', '127.0.0.1', '::1')
          changed_when: False
          
        - name: Remove test database and access to it
          command: |
            mysql -p{{ mysql_root_password }} -ne "{{ item }}"
          with_items:
            - DROP DATABASE IF EXISTS test
            - DELETE FROM mysql.db WHERE Db='test' OR Db='test\\_%'
          changed_when: False
          
        - name: Reload privilege tables
          command: |
            mysql -p{{ mysql_root_password }} -ne "{{ item }}"
          with_items:
            - FLUSH PRIVILEGES
          changed_when: False

        - name: Delete .my.conf
          file:
            path: /root/.my.cnf
            state: absent

        - name: Put SELinux in permissive mode
          selinux:
            policy: targeted
            state: permissive

      rescue:
        - name: Uninstall mysql package
          dnf:
            name: "{{ item }}"
            state: absent
          loop: 
            - mysql-server
            - mysql-devel

        - name: Remove mysql settings
          file:
            name: "/var/lib/mysql"
            state: absent


  handlers:   
    - name: restart_me
      service:
        name: mysqld
        state: reloaded
...


