---
- name: Installing samba server
  hosts: master
  gather_facts: no
  tags:
    - install_samba_server
    - install_samba
    - install
  vars_files:
    - vars.yaml

  tasks:
    - block:
      - name: Installing samba packages
        yum:
          name: "{{ item }}"
          state: present
        loop: "{{ package_list }}"

      - name: create samba share directory
        file:
          path: /smbshared
          state: directory
          owner: root
          group: root
          mode: '777'

      - name: Create files under samba shared folder
        shell: touch /smbshared/file{A..Z}.txt

      - name: create samba user
        user:
          name: "{{ item }}"
          state: present
        loop: "{{ samba_users }}"

      - name: Adding into samba user
        shell: echo -ne "{{ item.value }}\n{{ item.value }}\n" | smbpasswd -a -s "{{ item.key }}"
        loop: "{{ samba_cred | dict2items }}"

      - name: Samba database
        shell: "pdbedit -wL"
        register: db

      - name: Display samba database
        debug:
          msg: "{{ db.stdout.split('\n') }}"

      - name: adding content in samba config file
        blockinfile:
          path: /etc/samba/smb.conf
          create: yes
          block: |
            [tester]
                comment = smb dir for testing team
                path = /smbshared
                valid users = rohit, sudhanshu
                write list = sudhanshu
        notify:
          - restart_me

      - name: service restart
        service:
          name: "{{item}}"
          state: restarted
        loop: "{{services}}"

      - name: Enable firewall services for samba
        firewalld:
          service: "{{ item }}"
          permanent: yes
          state: enabled
          immediate: yes
        loop: "{{ firewall_service }}"

      - name: Put SELinux in permissive mode
        selinux:
          policy: targeted
          state: permissive

     #- name: Test samba settings
        #shell: testparm
        #register: result

     #- name: Display samba settings result
        #debug:
          #msg: "{{ result.stdout_lines }}"
          
     #- name: Display samba settings result
        #debug:
          #msg: "{{ result.stdout_lines }}"

      - name: "Set configuration status"
        set_fact:
          flag: true

      rescue:
      - name: Uninstalling samba packages
        yum:
          name: "{{ item }}"
          state: absent
        when: item not in ["firewalld", "python3-firewall"]
        loop: "{{ package_list }}"

      - name: Remove samba share directory
        file:
          path: /smbshared
          state: absent

      - name: Remove samba user
        user:
          name: "{{ item }}"
          state: absent
        loop: "{{ samba_users }}"

      - name: Remove content in samba config file
        blockinfile:
          path: /etc/samba/smb.conf
          create: yes
          state: absent
          block: |
            [tester]
                comment = smb dir for testing team
                path = /smbshared
                valid users = rohit, sudhanshu
                write list = sudhanshu

      - name: "Set configuration status"
        set_fact:
          flag: false

      always:
      - name: Create Samba server details folder
        local_action: file dest="/tmp/infodir/samba" recurse=yes state=directory
        run_once: true

      - stat: path=/tmp/infodir/samba/output.txt
        register: file_state

      - name: "Save Samba server details in /tmp/infodir/samba/output.txt"
        local_action:
          module: lineinfile
          line: "Samba Shared Folder: /smbshared"
          dest: /tmp/infodir/samba/output.txt
          regex: "Samba Shared"
          create: yes
        run_once: true
        when: file_state.stat.exists is defined and not file_state.stat.exists

      - name: Sending an e-mail using Gmail SMTP servers
        mail:
          host: 'smtp.gmail.com'
          port: '587'
          username: 'kripakoth@gmail.com'
          password: 'qsmdqpsntljxatan'
          to: 'Yogita Soni <yogitasoni9312@gmail.com>'
          subject: 'Samba server status'
          body: "{{ 'Samba server deployed successfully' if flag == true else 'Samba server not deployed' }}"
        delegate_to: localhost
        run_once: true

  handlers:
    - name: restart_me
      service:
        name: smb
        state: reloaded

